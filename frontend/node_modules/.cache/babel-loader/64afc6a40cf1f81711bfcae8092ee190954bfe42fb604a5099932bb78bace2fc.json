{"ast":null,"code":"var _jsxFileName = \"/Users/chrissanga/Desktop/projects/react-routing-practice/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n// react router, which calls the loader function passes an object to the loader function when it's executed. The object contains a request property, which contains a request object, and a params property, which contains an object with all the route parameters. The request object can be used to access the URL to access things like query parameters. The params object allows us to access the eventId route parameter\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", true);\n_c = EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch details for selected event.'\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","useLoaderData","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["/Users/chrissanga/Desktop/projects/react-routing-practice/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nexport default function EventDetailPage() {\n  const data = useLoaderData();\n\n  return (\n    <>\n      <EventItem event={data.event} />\n    </>\n  );\n}\n\n// react router, which calls the loader function passes an object to the loader function when it's executed. The object contains a request property, which contains a request object, and a params property, which contains an object with all the route parameters. The request object can be used to access the URL to access things like query parameters. The params object allows us to access the eventId route parameter\nexport async function loader({request, params}) {\n  const id = params.eventId;\n  \n  const response = await fetch('http://localhost:8080/events/' + id);\n  \n  if (!response.ok) {\n    throw new Response(JSON.stringify({message: 'Could not fetch details for selected event.'}), {status: 500,});\n  }\n  else {\n    return response;\n  }\n}"],"mappings":";;AAAA,SAASA,kBAAkB,QAAQ,kBAAkB;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAMC,IAAI,GAAGC,aAAa,CAAC,CAAC;EAE5B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,SAAS;MAACU,KAAK,EAAEH,IAAI,CAACG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP;;AAEA;AAAAR,EAAA,CAVwBD,eAAe;AAAAU,EAAA,GAAfV,eAAe;AAWvC,OAAO,eAAeW,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAACC,OAAO,EAAE;IAA6C,CAAC,CAAC,EAAE;MAACC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC9G,CAAC,MACI;IACH,OAAOP,QAAQ;EACjB;AACF;AAAC,IAAAN,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}